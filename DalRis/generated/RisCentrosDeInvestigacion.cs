using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalRis
{
	/// <summary>
	/// Strongly-typed collection for the RisCentrosDeInvestigacion class.
	/// </summary>
    [Serializable]
	public partial class RisCentrosDeInvestigacionCollection : ActiveList<RisCentrosDeInvestigacion, RisCentrosDeInvestigacionCollection>
	{	   
		public RisCentrosDeInvestigacionCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>RisCentrosDeInvestigacionCollection</returns>
		public RisCentrosDeInvestigacionCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                RisCentrosDeInvestigacion o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the RIS_CentrosDeInvestigacion table.
	/// </summary>
	[Serializable]
	public partial class RisCentrosDeInvestigacion : ActiveRecord<RisCentrosDeInvestigacion>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public RisCentrosDeInvestigacion()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public RisCentrosDeInvestigacion(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public RisCentrosDeInvestigacion(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public RisCentrosDeInvestigacion(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("RIS_CentrosDeInvestigacion", TableType.Table, DataService.GetInstance("RisProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdCentroDeInvestigacion = new TableSchema.TableColumn(schema);
				colvarIdCentroDeInvestigacion.ColumnName = "idCentroDeInvestigacion";
				colvarIdCentroDeInvestigacion.DataType = DbType.Int32;
				colvarIdCentroDeInvestigacion.MaxLength = 0;
				colvarIdCentroDeInvestigacion.AutoIncrement = true;
				colvarIdCentroDeInvestigacion.IsNullable = false;
				colvarIdCentroDeInvestigacion.IsPrimaryKey = true;
				colvarIdCentroDeInvestigacion.IsForeignKey = false;
				colvarIdCentroDeInvestigacion.IsReadOnly = false;
				colvarIdCentroDeInvestigacion.DefaultSetting = @"";
				colvarIdCentroDeInvestigacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdCentroDeInvestigacion);
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "codigo";
				colvarCodigo.DataType = DbType.AnsiString;
				colvarCodigo.MaxLength = 10;
				colvarCodigo.AutoIncrement = false;
				colvarCodigo.IsNullable = true;
				colvarCodigo.IsPrimaryKey = false;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarNombre = new TableSchema.TableColumn(schema);
				colvarNombre.ColumnName = "nombre";
				colvarNombre.DataType = DbType.AnsiString;
				colvarNombre.MaxLength = 500;
				colvarNombre.AutoIncrement = false;
				colvarNombre.IsNullable = true;
				colvarNombre.IsPrimaryKey = false;
				colvarNombre.IsForeignKey = false;
				colvarNombre.IsReadOnly = false;
				colvarNombre.DefaultSetting = @"";
				colvarNombre.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombre);
				
				TableSchema.TableColumn colvarProvincia = new TableSchema.TableColumn(schema);
				colvarProvincia.ColumnName = "provincia";
				colvarProvincia.DataType = DbType.AnsiString;
				colvarProvincia.MaxLength = 100;
				colvarProvincia.AutoIncrement = false;
				colvarProvincia.IsNullable = true;
				colvarProvincia.IsPrimaryKey = false;
				colvarProvincia.IsForeignKey = false;
				colvarProvincia.IsReadOnly = false;
				colvarProvincia.DefaultSetting = @"";
				colvarProvincia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProvincia);
				
				TableSchema.TableColumn colvarEstudios = new TableSchema.TableColumn(schema);
				colvarEstudios.ColumnName = "estudios";
				colvarEstudios.DataType = DbType.Int32;
				colvarEstudios.MaxLength = 0;
				colvarEstudios.AutoIncrement = false;
				colvarEstudios.IsNullable = true;
				colvarEstudios.IsPrimaryKey = false;
				colvarEstudios.IsForeignKey = false;
				colvarEstudios.IsReadOnly = false;
				colvarEstudios.DefaultSetting = @"";
				colvarEstudios.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstudios);
				
				TableSchema.TableColumn colvarFechaDeRegistro = new TableSchema.TableColumn(schema);
				colvarFechaDeRegistro.ColumnName = "fechaDeRegistro";
				colvarFechaDeRegistro.DataType = DbType.DateTime;
				colvarFechaDeRegistro.MaxLength = 0;
				colvarFechaDeRegistro.AutoIncrement = false;
				colvarFechaDeRegistro.IsNullable = true;
				colvarFechaDeRegistro.IsPrimaryKey = false;
				colvarFechaDeRegistro.IsForeignKey = false;
				colvarFechaDeRegistro.IsReadOnly = false;
				colvarFechaDeRegistro.DefaultSetting = @"";
				colvarFechaDeRegistro.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaDeRegistro);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["RisProvider"].AddSchema("RIS_CentrosDeInvestigacion",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdCentroDeInvestigacion")]
		[Bindable(true)]
		public int IdCentroDeInvestigacion 
		{
			get { return GetColumnValue<int>(Columns.IdCentroDeInvestigacion); }
			set { SetColumnValue(Columns.IdCentroDeInvestigacion, value); }
		}
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public string Codigo 
		{
			get { return GetColumnValue<string>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("Nombre")]
		[Bindable(true)]
		public string Nombre 
		{
			get { return GetColumnValue<string>(Columns.Nombre); }
			set { SetColumnValue(Columns.Nombre, value); }
		}
		  
		[XmlAttribute("Provincia")]
		[Bindable(true)]
		public string Provincia 
		{
			get { return GetColumnValue<string>(Columns.Provincia); }
			set { SetColumnValue(Columns.Provincia, value); }
		}
		  
		[XmlAttribute("Estudios")]
		[Bindable(true)]
		public int? Estudios 
		{
			get { return GetColumnValue<int?>(Columns.Estudios); }
			set { SetColumnValue(Columns.Estudios, value); }
		}
		  
		[XmlAttribute("FechaDeRegistro")]
		[Bindable(true)]
		public DateTime? FechaDeRegistro 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaDeRegistro); }
			set { SetColumnValue(Columns.FechaDeRegistro, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varCodigo,string varNombre,string varProvincia,int? varEstudios,DateTime? varFechaDeRegistro)
		{
			RisCentrosDeInvestigacion item = new RisCentrosDeInvestigacion();
			
			item.Codigo = varCodigo;
			
			item.Nombre = varNombre;
			
			item.Provincia = varProvincia;
			
			item.Estudios = varEstudios;
			
			item.FechaDeRegistro = varFechaDeRegistro;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdCentroDeInvestigacion,string varCodigo,string varNombre,string varProvincia,int? varEstudios,DateTime? varFechaDeRegistro)
		{
			RisCentrosDeInvestigacion item = new RisCentrosDeInvestigacion();
			
				item.IdCentroDeInvestigacion = varIdCentroDeInvestigacion;
			
				item.Codigo = varCodigo;
			
				item.Nombre = varNombre;
			
				item.Provincia = varProvincia;
			
				item.Estudios = varEstudios;
			
				item.FechaDeRegistro = varFechaDeRegistro;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdCentroDeInvestigacionColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ProvinciaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn EstudiosColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaDeRegistroColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdCentroDeInvestigacion = @"idCentroDeInvestigacion";
			 public static string Codigo = @"codigo";
			 public static string Nombre = @"nombre";
			 public static string Provincia = @"provincia";
			 public static string Estudios = @"estudios";
			 public static string FechaDeRegistro = @"fechaDeRegistro";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
